apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: argo-projects
spec:
  generators:
  - git:
      # git repository to get the variables from
      repoURL: https://github.com/AmrAlaaYassen/ArgoCD-ApplicationSet-Demo.git
      # branch used to get the variables from 
      revision: HEAD
      directories:
      # path to the directory that includes directories to read as variables
      - path: git-dir-generator-example/argo-projects/*
      files:  
      # >>> Tells the git generator to get perameters from this file in each app directory <<<
      - path: git-dir-generator-example/argo-projects/*/config.json
  template:
    metadata:
      # basename is the name of the directory not the full path
      name: '{{path.basename}}'
      annotations:
        # >>> Allows argo-image-update to update the image specified in config.json in each app's directory (got the images used in each deployment manifest)<<<
        argocd-image-updater.argoproj.io/image-list: '{{images}}'
        # >>> Using the argocd writeback method as I'm unsure of the structure of your git repo but you may be able to use git instead: https://argocd-image-updater.readthedocs.io/en/stable/basics/update-methods/#argocd-write-back-method <<<
        argocd-image-updater.argoproj.io/write-back-method: 'argocd'
    spec:
      project: default
      source:
        # source repo, in this example both repositories are the same
        repoURL: https://github.com/AmrAlaaYassen/ArgoCD-ApplicationSet-Demo.git
        targetRevision: HEAD
        # path to read manifests from, here it's the full path not only the name of the directory
        path: '{{path}}'
      destination:
        server: https://kubernetes.default.svc
        # different namespaces named after the directories names to be used as destinations
        namespace: '{{path.basename}}'